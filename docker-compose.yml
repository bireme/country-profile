version: '3.4'

services:
  country_profile_db:
    container_name: country-profile-db
    restart: unless-stopped
    image: postgres:14.3-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    user: "${USER_GROUP_IDS}"
    networks:
      - nginx-proxy

  country_profile_app:
    container_name: country-profile-app
    restart: unless-stopped
    build:
      context: .
      target: prod
    image: ${IMAGE_TAG}
    expose:
      - 8000
    volumes:
      - ${LOG_PATH}:/logs
      - static_files:/app/static_files
      - gunisock:/tmp
    depends_on:
      - country_profile_db
    env_file:
      - ./conf/app-env
    command: gunicorn --bind unix:/tmp/gunicorn.sock country_profile.wsgi ${GUNICORN_PARAMS}
    networks:
      - nginx-proxy
    deploy:
      resources:
        limits:
          memory: ${MEMORY_APP_LIMIT}
        reservations:
          memory: ${MEMORY_APP_RESERVATION}

  country_profile_app_webserver:
    container_name: country-profile-webserver
    restart: unless-stopped
    image: nginx:1.20-alpine
    expose:
      - 80
    volumes:
      - ./conf/nginx:/etc/nginx/conf.d
      - static_files:/app/static_files
      - gunisock:/tmp
    depends_on:
      - country_profile_app
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
    networks:
      - nginx-proxy
    deploy:
      resources:
        limits:
          memory: ${MEMORY_WEBSERVER_LIMIT}
        reservations:
          memory: ${MEMORY_WEBSERVER_RESERVATION}


networks:
  nginx-proxy:
    external: true

volumes:
  static_files:
  gunisock:
